{
  //// Define onde buscar por arquivos de configuração. Se for diretório, pega todos os .confs no diretório (com subdiretórios).
  //// NÃO funciona "Includes" dentro dos arquivos incluídos  ***** Implementado em hardcode por enquanto!!!!!!
  //// "Reload" só funciona nos arquivos adicionados na inicialização da aplicação. Não 'repesquisa' os arquivos nos diretórios.
  "Includes": [
    "/etc/HotLIB.d",
    "/etc/%(AppName)%.d",
    "%ProgramData%/HotLIB",
    "%ProgramData%/%(AppName)%",
    "%(ExecutablePath)%appsettings.json",
    "%(ExecutablePath)%%(ExecutableName)%*.conf",
    "%(ExecutablePath)%appsettings.%(Environment)%.json"
  ],

  // URLs:  lista de prefixos separados por ';' a serem ouvidos tanto pela clase HttpServer quanto pela HotAPIServer
  "urls": "http://*:11001/;https://*:11002/"

  //  IgnorePrefix: Prefixo a ser ignorado no início da url. (proxypass, fastcgi, etc..)
  //       usado para ignorar início do path na url no pré-processamento de /version e /update
  // ex: "IgnorePrefix": "/m"
  ,
  "IgnorePrefix": null
  //

  //  Endereço para enviar atualização do sistema
  ,
  "Update": {
    //  Endereço para enviar atualização do sistema
    "URL": "http://127.0.0.1:11001/",

    // Endereços IP de origem (IP, IP/MASK, ...) de onde podem vir as atualizações do sistema
    "AcceptFrom": "192.168.0.0/16,172.16.0.0/12,10.0.0.0/8",

    // Senha de autorização de atualização
    "Secret": "*()789d32hd32&*90(*@Ednm"
  }

  //  Ajustar conexões também em AppGlobals.cs
  ,
  "ConnectionStrings": {
    "DefaultConnection": "Server=localhost;Trusted_Connection=True"
    // "BASE2": "Server=bd2;Database=bd2;user=sa;password=%(BASE2:passwd_sa)%", // expande para senha em user-secrets
  },
  "Smtp": {
    "Host": "localhost",
    "Port": 25,
    //"Username": "sistema",
    //"Password": "xxxx",
    //"SSL": true,
    "From": "%(AppName)%@localhost"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Error"
    },
    "Console": { // Console provider.
      "LogLevel": {
        "Default": "Information",
        "Microsoft": "Warning",
        "Microsoft.Hosting": "Trace",
        "Microsoft.Hosting.Lifetime": "Information",
        "Hot.HttpServer": "Information"
      }
    },
    "EventLog": {
      // "LogName": "Application",
      // "SourceName": "AppName",  - padrão = Config["AppName"]
      "LogLevel": {
        "Default": "Error" // "Error" para logar nos eventos do Windows. É necessário permissão de adm pra criar o nome do log
      }
    },
    "email": {
      "Level": "None",
      "Host": "localhost",
      "Port": 25,
      //"Username": "sistema",
      //"Password": "xxxx",
      //"SSL": "true",
      "To": "root@localhost",
      "From": "%(AppName)%@localhost"
    },
    "file": {
      "Level": "Error",
      "filename": "%(ExecutableFullName)%.log"
    }
  }
}
